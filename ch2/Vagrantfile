# -*- mode: ruby -*-
# vi: set ft=ruby : # 에디터에 현재 파일이 ruby임을 인식하게 하는 호환 코드, ft=file type
Vagrant.configure("2") do |config| # do |config|는 베이그런트 설정의 시작을 알림.
  config.vm.define "m-k8s" do |cfg| # 가상머신 m-k8s로 정의
    cfg.vm.box = "sysnet4admin/CentOS-k8s"
    cfg.vm.provider "virtualbox" do |vb| # 베이그런트의 provider가 virtualbox라고 정의, 프로바이더는 베이그런트를 통해 제공되는 코드가 실제로 가상 머신으로 배포되게 하는 소프트웨어 (버추얼박스)
      vb.name = "m-k8s(github_SysNet4Admin)"# 가상머신 이름
      vb.cpus = 2 # cpu수
      vb.memory = 2048 # 메모리 크기
      vb.customize ["modifyvm", :id, "--groups", "/k8s-SM(github_SysNet4Admin)"] # 소속된 그룹
    end
    cfg.vm.host_name = "m-k8s" # 호스트 이름
    cfg.vm.network "private_network" , ip: "192.168.1.10" # 호스트 전용 네트워크 설정 및 IP설정
    cfg.vm.network "forwarded_port", guest: 22, host: 60010, auto_correct: true , id:"ssh" #ssh 통신 구성
    cfg.vm.synced_folder "../data", "/vagrant", disabled: true # 호스트(PC or 노트북)와 게스트(가상머신) 사이 디렉터리 동기화 방지
    cfg.vm.provision "shell", path: "install_pkg.sh"
    cfg.vm.provision "file", source: "ping_2_nds.sh", destination: "ping_2_nds.sh" # 파일을 게스트 운영체제에 전달하기 위해 (/home/vagrant)
    cfg.vm.provision "shell", path: "config.sh"
  end
  (1..3).each do |i| # 1~3 i 반복
    config.vm.define "w#{i}-k8s" do |cfg|
      cfg.vm.box = "sysnet4admin/CentOS-k8s"
      cfg.vm.provider "virtualbox" do |vb|
        vb.name = "w#{i}-k8s(github_SysNet4Admin)"
        vb.cpus = 1
        vb.memory = 1024
        vb.customize ["modifyvm", :id , "--groups", "/k8s-SM(github_SysNet4admin)"]
      end
      cfg.vm.host_name = "w#{i}-k8s"
      cfg.vm.network "private_network", ip: "192.168.1.10#{i}"
      cfg.vm.network "forwarded_port", guest: 22, host: "6010#{i}", auto_correct: true, id:"ssh"
      cfg.vm.synced_folder "../data", "/vagrant" , disabled: true
      cfg.vm.provision "shell" , path: "install_pkg.sh"
    end
  end
end
